AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: A Telegram bot using AWS Lambda and DynamoDB

Parameters:
  TelegramBotToken:
    Type: String
    Description: "The token for your Telegram bot"

  SecretToken:
    Type: String
    Description: "Secret token for securing the webhook endpoint"

Resources:
  TelegramBotFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      Runtime: python3.12
      CodeUri: .
      MemorySize: 128
      Timeout: 10
      Environment:
        Variables:
          TELEGRAM_BOT_TOKEN: !Ref TelegramBotToken
          DYNAMODB_BOTTLES_TABLE: !Ref BottlesTable
          DYNAMODB_ADMINS_TABLE: !Ref AdminsTable
          DYNAMODB_GIFS_TABLE: !Ref GifsTable
      Events:
        TelegramApi:
          Type: Api
          Properties:
            Path: /telegram
            Method: POST

  BottlesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Bottles
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  AdminsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Admins
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  GifsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Gifs
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
